"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[625],{2236:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>n,metadata:()=>s,toc:()=>c});var o=r(1966),a=(r(9496),r(9613));const n={description:"API Reference for Roact Reflex, bindings for Reflex and Roact Hooked."},l="Roact Reflex",s={unversionedId:"reference/roact-reflex/index",id:"reference/roact-reflex/index",title:"Roact Reflex",description:"API Reference for Roact Reflex, bindings for Reflex and Roact Hooked.",source:"@site/docs/reference/roact-reflex/index.md",sourceDirName:"reference/roact-reflex",slug:"/reference/roact-reflex/",permalink:"/reflex/docs/reference/roact-reflex/",draft:!1,tags:[],version:"current",frontMatter:{description:"API Reference for Roact Reflex, bindings for Reflex and Roact Hooked."},sidebar:"referenceSidebar",previous:{title:"createBroadcastReceiver",permalink:"/reflex/docs/reference/reflex/create-broadcast-receiver"},next:{title:"<ReflexProvider>",permalink:"/reflex/docs/reference/roact-reflex/reflex-provider"}},i={},c=[{value:"Components",id:"components",level:2},{value:"Hooks",id:"hooks",level:2},{value:"Context Hooks",id:"context-hooks",level:3},{value:"State Hooks",id:"state-hooks",level:3}],u={toc:c},p="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,o.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"roact-reflex"},"Roact Reflex"),(0,a.kt)("p",null,"The official bindings for Reflex and Roact Hooked are available under ",(0,a.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@rbxts/roact-reflex"},(0,a.kt)("inlineCode",{parentName:"a"},"@rbxts/roact-reflex")),"."),(0,a.kt)("p",null,"Luau is not supported by Roact Hooked or Roact Reflex."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/littensy/roact-reflex"},"See the source code on GitHub \u2192")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"components"},"Components"),(0,a.kt)("p",null,"Roact Reflex allows you to use your root producer from Roact function components. It exposes a component that you can use to specify the producer for Hooks to use:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"reflex-provider"},(0,a.kt)("inlineCode",{parentName:"a"},"<ReflexProvider>"))," enables Reflex Hooks for a producer.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"reflex-provider#setting-up-roact-reflex"},"Setting up Roact Reflex")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"reflex-provider#using-other-providers-with-reflexprovider"},"Using other providers with ",(0,a.kt)("inlineCode",{parentName:"a"},"ReflexProvider")))))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"Roact.mount(\n    <ReflexProvider producer={producer}>\n        <App />\n    </ReflexProvider>,\n    playerGui,\n);\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"hooks"},"Hooks"),(0,a.kt)("p",null,"You can use Hooks to read and subscribe to state, or to dispatch actions. Use these Hooks in function components that are wrapped in a ",(0,a.kt)("a",{parentName:"p",href:"reflex-provider"},(0,a.kt)("inlineCode",{parentName:"a"},"<ReflexProvider>")),"."),(0,a.kt)("h3",{id:"context-hooks"},"Context Hooks"),(0,a.kt)("p",null,"Use these Hooks to access the root producer and dispatch actions:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"use-producer"},(0,a.kt)("inlineCode",{parentName:"a"},"useProducer"))," lets components read and dispatch actions to the root producer.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"use-producer#dispatching-actions"},"Dispatching actions")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"use-producer#pre-typed-useproducer-hook"},"Pre-typed ",(0,a.kt)("inlineCode",{parentName:"a"},"useProducer")," hook"))))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"function Button() {\n    const { increment } = useProducer();\n    // ...\n")),(0,a.kt)("h3",{id:"state-hooks"},"State Hooks"),(0,a.kt)("p",null,"Use these Hooks to read and subscribe to state:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"use-selector"},(0,a.kt)("inlineCode",{parentName:"a"},"useSelector"))," lets a component subscribe to a Reflex producer.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"use-selector#subscribing-to-a-producers-state"},"Subscribing to a producer's state")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"use-selector#custom-equality-comparison"},"Custom equality comparison")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"use-selector#using-selectors-with-curried-arguments"},"Using selectors with curried arguments")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"use-selector-creator"},(0,a.kt)("inlineCode",{parentName:"a"},"useSelectorCreator"))," lets you call ",(0,a.kt)("inlineCode",{parentName:"li"},"useSelector")," with a ",(0,a.kt)("a",{parentName:"li",href:"../reflex/create-selector#selector-factories"},"selector factory"),".",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"use-selector-creator#subscribing-to-state-with-selector-factories"},"Subscribing to state with selector factories"))))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"function Counter() {\n    const count = useSelector((state) => state.count);\n    // ...\n")))}d.isMDXComponent=!0}}]);