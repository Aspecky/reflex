"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[255],{9613:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(9496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),u=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(o.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,h=d["".concat(o,".").concat(m)]||d[m]||p[m]||s;return n?a.createElement(h,l(l({ref:t},c),{},{components:n})):a.createElement(h,l({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,l=new Array(s);l[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[d]="string"==typeof e?e:r,l[1]=i;for(var u=2;u<s;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9372:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(9496),r=n(5924);const s={tabItem:"tabItem_Yo4Q"};function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(s.tabItem,l),hidden:n},t)}},4638:(e,t,n)=>{n.d(t,{Z:()=>w});var a=n(8028),r=n(9496),s=n(5924),l=n(4005),i=n(3442),o=n(5951),u=n(8378),c=n(7497);function d(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function p(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,i.k6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,o._X)(s),(0,r.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(a.location.search);t.set(s,e),a.replace({...a.location,search:t.toString()})}),[s,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,s=p(e),[l,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:s}))),[o,u]=h({queryString:n,groupId:a}),[d,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,s]=(0,c.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:a}),b=(()=>{const e=o??d;return m({value:e,tabValues:s})?e:null})();(0,r.useLayoutEffect)((()=>{b&&i(b)}),[b]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),f(e)}),[u,f,s]),tabValues:s}}var b=n(5167);const y={tabList:"tabList_T_FK",tabItem:"tabItem_Mcr7"};function g(e){let{className:t,block:n,selectedValue:i,selectValue:o,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,l.o5)(),p=e=>{const t=e.currentTarget,n=c.indexOf(t),a=u[n].value;a!==i&&(d(t),o(a))},m=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:l}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:p},l,{className:(0,s.Z)("tabs__item",y.tabItem,l?.className,{"tabs__item--active":i===t})}),n??t)})))}function k(e){let{lazy:t,children:n,selectedValue:a}=e;const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},s.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function v(e){const t=f(e);return r.createElement("div",{className:(0,s.Z)("tabs-container",y.tabList)},r.createElement(g,(0,a.Z)({},e,t)),r.createElement(k,(0,a.Z)({},e,t)))}function w(e){const t=(0,b.Z)();return r.createElement(v,(0,a.Z)({key:String(t)},e))}},7405:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>u,toc:()=>d});var a=n(8028),r=(n(9496),n(9613)),s=n(4638),l=n(9372);const i={description:"Learn the different ways to subscribe to state changes with Reflex"},o="Subscribing to State",u={unversionedId:"guides/subscribing-to-state",id:"guides/subscribing-to-state",title:"Subscribing to State",description:"Learn the different ways to subscribe to state changes with Reflex",source:"@site/docs/guides/subscribing-to-state.md",sourceDirName:"guides",slug:"/guides/subscribing-to-state",permalink:"/reflex/docs/guides/subscribing-to-state",draft:!1,tags:[],version:"current",frontMatter:{description:"Learn the different ways to subscribe to state changes with Reflex"},sidebar:"learnSidebar",previous:{title:"Using Selectors",permalink:"/reflex/docs/guides/using-selectors"},next:{title:"Observers and Entities",permalink:"/reflex/docs/guides/observers-and-entities"}},c={},d=[{value:"Player list",id:"player-list",level:2},{value:"Conditional side effects",id:"conditional-side-effects",level:3},{value:"One-time side effects",id:"one-time-side-effects",level:3},{value:"Async side effects",id:"async-side-effects",level:3},{value:"Observing individual players",id:"observing-individual-players",level:3},{value:"Summary",id:"summary",level:2}],p={toc:d},m="wrapper";function h(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"subscribing-to-state"},"Subscribing to State"),(0,r.kt)("p",null,"On ",(0,r.kt)("a",{parentName:"p",href:"using-selectors"},"Using Selectors"),", we learned how to use selectors to read and subscribe to state from the store. Reflex provides a few more useful ways to subscribe to state changes with selectors."),(0,r.kt)("admonition",{title:"what you'll learn",type:"note"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"\ud83c\udf0e Common use cases for subscribing to state"),(0,r.kt)("li",{parentName:"ul"},"\ud83d\udd0c Different ways to subscribe to state"),(0,r.kt)("li",{parentName:"ul"},"\ud83d\udcda How to use ",(0,r.kt)("a",{parentName:"li",href:"../reference/reflex/producer#subscribeselector-predicate-listener"},(0,r.kt)("inlineCode",{parentName:"a"},"subscribe")),", ",(0,r.kt)("a",{parentName:"li",href:"../reference/reflex/producer#onceselector-predicate-listener"},(0,r.kt)("inlineCode",{parentName:"a"},"once")),", and ",(0,r.kt)("a",{parentName:"li",href:"../reference/reflex/producer#waitselector-predicate"},(0,r.kt)("inlineCode",{parentName:"a"},"wait"))))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"player-list"},"Player list"),(0,r.kt)("p",null,"Say your state had a ",(0,r.kt)("inlineCode",{parentName:"p"},"players")," slice that stored the health of each player in a game:"),(0,r.kt)(s.Z,{groupId:"languages",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"TypeScript",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="players.ts" showLineNumbers',title:'"players.ts"',showLineNumbers:!0},'import { createProducer } from "@rbxts/reflex";\n\ninterface PlayersState {\n    readonly entities: {\n        readonly [id: string]: PlayerEntity;\n    };\n}\n\nexport interface PlayerEntity {\n    readonly health: number;\n}\n\nconst initialState: PlayersState = {\n    players: {},\n};\n\nexport const playersSlice = createProducer(initialState, {\n    addPlayer: (state, id: string) => ({\n        ...state,\n        players: { ...state.players, [id]: { health: 100 } },\n    }),\n\n    setPlayerHealth: (state, id: string, health: number) => ({\n        ...state,\n        players: { ...state.players, [id]: { health } },\n    }),\n});\n'))),(0,r.kt)(l.Z,{value:"Luau",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="players.lua" showLineNumbers',title:'"players.lua"',showLineNumbers:!0},"local Reflex = require(ReplicatedStorage.Packages.Reflex)\n\nexport type PlayersState = {\n    entities: { [string]: PlayerEntity },\n}\n\nexport type PlayersActions = {\n    addPlayer: (id: string) -> (),\n    setPlayerHealth: (id: string, health: number) -> (),\n}\n\nexport type PlayerEntity = {\n    health: number,\n}\n\nlocal initialState: PlayersState = {\n    entities = {},\n}\n\nlocal playersSlice = Reflex.createProducer(initialState, {\n    addPlayer = function(state, id: string)\n        local nextState = table.clone(state)\n        local nextEntities = table.clone(state.entities)\n        nextEntities[id] = { health = 100 }\n        nextState.entities = nextEntities\n        return nextState\n    end,\n\n    setPlayerHealth = function(state, id: string, health: number)\n        local nextState = table.clone(state)\n        local nextEntities = table.clone(state.entities)\n        nextEntities[id] = { health = health }\n        nextState.entities = nextEntities\n        return nextState\n    end,\n})\n\nreturn { playersSlice = playersSlice }\n")))),(0,r.kt)("p",null,"The root state has a ",(0,r.kt)("inlineCode",{parentName:"p"},"players")," slice with an ",(0,r.kt)("inlineCode",{parentName:"p"},"entities")," field that contains your player entities. You will often need to run side effects for changes to state when working with entities. For example, you may want to play a sound when a player's health decreases."),(0,r.kt)("h3",{id:"conditional-side-effects"},"Conditional side effects"),(0,r.kt)("p",null,"You can use ",(0,r.kt)("a",{parentName:"p",href:"../reference/reflex/producer#subscribeselector-predicate-listener"},(0,r.kt)("inlineCode",{parentName:"a"},"subscribe"))," to run side effects when a selector's value changes. In this example, we subscribe to the health of ",(0,r.kt)("inlineCode",{parentName:"p"},"Player1")," and play a sound when their health decreases:"),(0,r.kt)(s.Z,{groupId:"languages",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"TypeScript",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"showLineNumbers",showLineNumbers:!0},'import { RootState, producer } from "./producer";\n\nconst selectPlayerHealthById = (id: string) => {\n    return (state: RootState) => {\n        return state.players.entities[id].health;\n    };\n};\n\nconst selectHealth = selectPlayerHealthById("Player1");\n\nproducer.subscribe(selectHealth, (health, lastHealth) => {\n    if (health < lastHealth) {\n        // Play sound\n    }\n});\n'))),(0,r.kt)(l.Z,{value:"Luau",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:"showLineNumbers",showLineNumbers:!0},'local producer = require(script.Parent.producer)\n\nlocal function selectPlayerHealthById(id: string)\n    return function(state: producer.RootState)\n        return state.players.entities[id].health\n    end\nend\n\nlocal selectHealth = selectPlayerHealthById("Player1")\n\nproducer:subscribe(selectHealth, function(health, lastHealth)\n    if health < lastHealth then\n        -- Play sound\n    end\nend)\n')))),(0,r.kt)("p",null,"There are a few things to note about this example:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"We defined ",(0,r.kt)("inlineCode",{parentName:"strong"},"selectPlayerHealthById"),",")," a ",(0,r.kt)("a",{parentName:"li",href:"using-selectors#passing-arguments-to-selectors"},"selector factory"),", to create a simple selector that returns the health of a player with a given ID."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Our selector isn't ",(0,r.kt)("a",{parentName:"strong",href:"using-selectors#transforming-state"},"memoized"),",")," but that's okay. It's not a problem since it's fast and returns a value directly from the state."),(0,r.kt)("li",{parentName:"ul"},"Our subscription callback receives the ",(0,r.kt)("strong",{parentName:"li"},"current value")," and the ",(0,r.kt)("strong",{parentName:"li"},"last value")," that the listener received. This is useful for comparing values and running conditional side effects.")),(0,r.kt)("p",null,"As a shorthand, you can pass a ",(0,r.kt)("inlineCode",{parentName:"p"},"predicate")," argument to ",(0,r.kt)("inlineCode",{parentName:"p"},"subscribe")," to only run the listener when the predicate returns ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),". In this case, we can use it to only run the listener if the player's health is lower than the last health:"),(0,r.kt)(s.Z,{groupId:"languages",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"TypeScript",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"showLineNumbers",showLineNumbers:!0},"const didDecrease = (current: number, previous: number) => {\n    return current < previous;\n};\n\nproducer.subscribe(selectHealth, didDecrease, (health, lastHealth) => {\n    // Play sound\n});\n"))),(0,r.kt)(l.Z,{value:"Luau",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:"showLineNumbers",showLineNumbers:!0},"local function didDecrease(current: number, previous: number)\n    return current < previous\nend\n\nproducer:subscribe(selectHealth, didDecrease, function(health, lastHealth)\n    -- Play sound\nend)\n")))),(0,r.kt)("h3",{id:"one-time-side-effects"},"One-time side effects"),(0,r.kt)("p",null,"You can use ",(0,r.kt)("a",{parentName:"p",href:"../reference/reflex/producer#onceselector-predicate-listener"},(0,r.kt)("inlineCode",{parentName:"a"},"once"))," to only run a listener the next time a value changes. If you want to end the game once the player's health reaches ",(0,r.kt)("inlineCode",{parentName:"p"},"0"),", you can use ",(0,r.kt)("inlineCode",{parentName:"p"},"once"),":"),(0,r.kt)(s.Z,{groupId:"languages",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"TypeScript",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"showLineNumbers",showLineNumbers:!0},"const isDead = (health: number) => {\n    return health <= 0;\n};\n\nproducer.once(selectHealth, isDead, () => {\n    // End game\n});\n"))),(0,r.kt)(l.Z,{value:"Luau",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:"showLineNumbers",showLineNumbers:!0},"local function isDead(health: number)\n    return health <= 0\nend\n\nproducer:once(selectHealth, isDead, function()\n    -- End game\nend)\n")))),(0,r.kt)("p",null,"Once the player's health reaches ",(0,r.kt)("inlineCode",{parentName:"p"},"0"),", the listener will be disconnected and the game will end."),(0,r.kt)("h3",{id:"async-side-effects"},"Async side effects"),(0,r.kt)("p",null,"You can also use ",(0,r.kt)("a",{parentName:"p",href:"../reference/reflex/producer#waitselector-predicate"},(0,r.kt)("inlineCode",{parentName:"a"},"wait")),", which returns a Promise that resolves with the new value. This is especially useful for running side effects in async functions:"),(0,r.kt)(s.Z,{groupId:"languages",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"TypeScript",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"showLineNumbers",showLineNumbers:!0},'async function startGame() {\n    producer.setGameStatus("started");\n\n    return producer.wait(selectHealth, isDead).then(() => {\n        producer.setGameStatus("finished");\n    });\n}\n'))),(0,r.kt)(l.Z,{value:"Luau",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:"showLineNumbers",showLineNumbers:!0},'function startGame()\n    producer.setGameStatus("started")\n\n    return producer:wait(selectHealth, isDead):andThen(function()\n        producer.setGameStatus("finished")\n    end)\nend\n')))),(0,r.kt)("p",null,"This uses ",(0,r.kt)("a",{parentName:"p",href:"../reference/reflex/producer#waitselector-predicate"},(0,r.kt)("inlineCode",{parentName:"a"},"wait"))," to determine when to end the game, and can be chained off of to start the next game. You can apply the same logic to other side effects, like ending multiplayer matches or showing a game over screen."),(0,r.kt)("h3",{id:"observing-individual-players"},"Observing individual players"),(0,r.kt)("p",null,"You learned how to run side effects for ",(0,r.kt)("em",{parentName:"p"},"one")," player, but what if you want to run individual side effects for ",(0,r.kt)("em",{parentName:"p"},"each")," player? We will learn how to use ",(0,r.kt)("a",{parentName:"p",href:"../reference/reflex/producer#observeselector-discriminator-observer"},(0,r.kt)("inlineCode",{parentName:"a"},"observe"))," in the next section."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"summary"},"Summary"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"You can create ",(0,r.kt)("strong",{parentName:"li"},"conditional side effects")," by passing a ",(0,r.kt)("inlineCode",{parentName:"li"},"predicate")," function."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"../reference/reflex/producer#subscribeselector-predicate-listener"},(0,r.kt)("inlineCode",{parentName:"a"},"subscribe"))," runs a listener when a selector's value changes."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"../reference/reflex/producer#onceselector-predicate-listener"},(0,r.kt)("inlineCode",{parentName:"a"},"once"))," runs a listener the next time a selector's value changes, then disconnects."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"../reference/reflex/producer#waitselector-predicate"},(0,r.kt)("inlineCode",{parentName:"a"},"wait"))," returns a Promise that resolves with the next value of a selector.")))}h.isMDXComponent=!0}}]);